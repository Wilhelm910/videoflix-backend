"""
Django settings for videoflix project.
Generated by 'django-admin startproject' using Django 5.0.6.
For more details see: https://docs.djangoproject.com/en/5.0/topics/settings/
"""

from pathlib import Path
import environ
import os

# Base directory of the project
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-qyp^e6tcmkofekajo%l3=)=zmeeko3a4a=#8ciga(-krx)i7*4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Hosts allowed to serve the project
ALLOWED_HOSTS = ["localhost", "127.0.0.1"]

# Django REST framework configuration for authentication and permissions.
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        # Additional authentication classes can be added here.
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
        # Additional permission classes can be added here.
    ],
}

# Static files settings
STATIC_ROOT = os.path.join(BASE_DIR, 'static/staticfiles')
STATIC_URL = '/static/'

# Enable transaction support for import_export operations.
IMPORT_EXPORT_USE_TRANSACTIONS = True

# Installed apps in the project.
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "rest_framework",
    "users_app",
    "videos_app.apps.VideosConfig",
    'corsheaders',
    "rest_framework.authtoken",
    "debug_toolbar",
    "django_rq",
    'import_export',
]

# Middleware configuration.
MIDDLEWARE = [
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',    
]

# Function to control when the debug toolbar is shown.
def show_toolbar(request):
    if request.path.startswith('/media/'):
        return False
    return True

DEBUG_TOOLBAR_CONFIG = {
    'SHOW_TOOLBAR_CALLBACK': 'videoflix.settings.show_toolbar',
}

# RQ (Redis Queue) configuration for background task processing.
RQ_QUEUES = {
    'WORKER_CLASS': 'rq_win.WindowsWorker',
    "default": {
        'HOST': 'localhost',
        'PORT': 6379,
        'DB': 0,
        "DEFAULT_TIMEOUT": 360,
        'PASSWORD': 'foobared',
    }
}

DJANGO_RQ = {
    'default': {
        'USE_REDIS_CACHE': True,
        'WORKER_CLASS': 'rq_win.WindowsWorker',
    }
}

# Cache settings using django_redis.
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "PASSWORD": "foobared",
            "CLIENT_CLASS": "django_redis.client.DefaultClient"
        },
        "KEY_PREFIX": "videoflix"
    }
}

# Internal IPs for the debug toolbar.
INTERNAL_IPS = [
    "127.0.0.1",
]

# URL configuration module for the project.
ROOT_URLCONF = 'videoflix.urls'

# Template configuration.
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],  # Additional template directories can be added here.
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI application for deployment.
WSGI_APPLICATION = 'videoflix.wsgi.application'

# Cache time-to-live; set to 0 to disable caching.
# CACHE_TTL = 60 * 15
CACHE_TTL = 0

# Database configuration using SQLite.
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation settings.
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',},
]

# Media files settings.
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = "/media/"

# Custom user model.
AUTH_USER_MODEL = 'users_app.CustomUser'

# Internationalization settings.
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Default primary key field type.
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CORS settings for allowing cross-origin requests.
CORS_ALLOWED_ORIGINS = [
    'http://localhost:5173',
]
CORS_ALLOW_METHODS = ["GET", "POST", "OPTIONS", "PUT", "DELETE"]
CORS_ALLOW_HEADERS = [
    "content-type",
    "authorization",
    "cache-control",
]
CORS_ALLOW_MEDIA = True

# CSRF exempt paths.
CSRF_EXEMPT_PATHS = ['/logout/']

# Frontend URL for redirection and email links.
FRONTEND_URL = 'http://localhost:5173'
DEFAULT_FROM_EMAIL = 'wilhelm.teicke@googlemail.com'

# Load environment variables from a .env file if present.
env = environ.Env()
environ.Env.read_env()

# Email backend configuration using SMTP.
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = env('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')

# Append slash setting.
APPEND_SLASH = False
